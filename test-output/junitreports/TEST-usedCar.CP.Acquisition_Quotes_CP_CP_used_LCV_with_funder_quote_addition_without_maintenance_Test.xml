<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DSK-4052" failures="0" tests="5" name="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" time="147.615" errors="1" timestamp="2023-04-12T19:23:00 IST" skipped="0">
  <testcase classname="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" name="aquisition_quotes_OTR_calculation_without_maintenance_test" time="43.516"/>
  <system-out>
    <![CDATA[<b>Clicked on Quote button </b> <br />
<b>Selecting used vehicle with registration no. = HK21YPJ and mileage = 10000</b> <br />
<b>Vehicle selected</b> <br />
<b>Paint option has been selected</b> <br />
<b>Interior option has been selected</b> <br />
<b> Acquisition Contract type option = CP has been selected</b> <br />
<b> Customer Contract type option = CP has been selected</b> <br />
<b>Cost Price ex VAT and RFL from screen is 21125.0</b> <br />
<b>VAT from screen is 4225.0</b> <br />
<b>Cost Price ex VAT and RFL calculated is 21125.0</b> <br />
<b>Cost Price ex VAT and RFL verified and found OK</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" name="aquisition_quotes_used_LCV_edit_cost_price_and_check_OTR_without_maintenance_test" time="0.002"/>
  <system-out/>
  <testcase classname="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" name="aquisition_quotes_holding_cost_calculations_without_maintenance_test" time="19.354"/>
  <system-out>
    <![CDATA[<b>***********Entered in holding cost page ***********</b> <br />
<b>***********Holding Cost Calculations has been Started*************</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel</b> <br />
<b>Total_monthly_holding_cost_from_screen =233.92</b> <br />
<b>Total_monthly_holding_cost_from_excel =233.91666666666666</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" name="aquisition_quotes_customer_quote_calculations_check_monthly_finance_payment_without_maintenance_test" time="34.861"/>
  <system-out>
    <![CDATA[<b>***********Entered in Customer Quote page ***********</b> <br />
<b>Matrix credit type Limited Credit has been selected</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -started</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -completed</b> <br />
<b>Actual Monthly Finance Payment from screen is 1359.39</b> <br />
<b>Writing screen values to Excel for customer quote calculation -started</b> <br />
<b>Writing screen values to Excel for customer quote calculation -completed</b> <br />
<b>Expected Monthly Finannce Rental from excel is 1359.3913806087546</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test" name="aquisition_quotes_quote_summary_values_verification_without_maintenance_test" time="49.882">
    <error message="Cannot get a STRING value from a NUMERIC formula cell" type="java.lang.IllegalStateException">
      <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC formula cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:987)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:330)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:280)
at com.amt.testUtil.GetExcelFormulaValue.get_string_value(GetExcelFormulaValue.java:62)
at com.amt.QuoteSummaryPages.QuoteSummary_CP_CP_Page.quote_summary_customer_quote_summary_value_verification_for_funder_without_maintenance(QuoteSummary_CP_CP_Page.java:2843)
at usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test.aquisition_quotes_quote_summary_values_verification_without_maintenance_test(Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test.java:157)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- aquisition_quotes_quote_summary_values_verification_without_maintenance_test -->
  <system-out>
    <![CDATA[<b>*************OTR Calulation on quote summary page has been started************</b> <br />
<b>Reading values from OTR calculation -Quote Summary Page</b> <br />
<b>Cost otr price from screen is 25350.0</b> <br />
<b>Cost price ex vat and rfl from screen is 21125.0</b> <br />
<b>Otr Vat from screen is 4225.0</b> <br />
<b>Cost otr price from excel is 25350.0</b> <br />
<b>Cost price ex vat and rfl from excel is 21125.0</b> <br />
<b>Otr Vat from excel is 4225.0</b> <br />
<b>OTR price compared</b> <br />
<b>Cost price ex vat and rfl compared</b> <br />
<b>VAT compared</b> <br />
<b>*************Holding Cost Calulation on quote summary page has been started************</b> <br />
<b>Reading values from Holding Cost summary -Quote Summary Page</b> <br />
<b>holding_cost_terms_from_screen12.0</b> <br />
<b>holding_cost_miles_per_annum_from_screen5000.0</b> <br />
<b>holding_cost_monthly_finance_cost_from_screen233.92</b> <br />
<b>holding_cost_total_monthly_holding_cost_from_screen =233.92</b> <br />
<b>terms compared</b> <br />
<b>Miles per annum compared</b> <br />
<b>Finance cost compared</b> <br />
<b>Total Monthly Holding Cost compared</b> <br />
<b>*************Customer Quote Calulation on quote summary page has been started************</b> <br />
<br>----------Screenshot---------<br>
<img src="D:\StagingNew\AMT_Automation\target\surefire-reports\html\failure_screenshots\aquisition_quotes_quote_summary_values_verification_without_maintenance_test_12_04_2023_07_23_00.png" height="800" width="1000">]]>
  </system-out>
</testsuite> <!-- usedCar.CP.Acquisition_Quotes_CP_CP_used_LCV_with_funder_quote_addition_without_maintenance_Test -->
