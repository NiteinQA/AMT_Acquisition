<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DSK-4052" failures="1" tests="5" name="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" time="114.943" errors="0" timestamp="2023-04-26T14:05:54 IST" skipped="1">
  <testcase classname="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" name="aquisition_quotes_user_flow_broker_HPNR_OTR_calculation_test" time="67.626"/>
  <system-out>
    <![CDATA[<b>Clicked on Quote button </b> <br />
<b>Manufacture =AUDI has been selected</b> <br />
<b>Model range =A7 has been selected</b> <br />
<b>Vehicle has been selected</b> <br />
<b>Paint option has been selected</b> <br />
<b>Interior option has been selected</b> <br />
<b>Acquisition Contract type option selected = Broker </b> <br />
<b>Customer Contract type option selected =  Hire Purchase Non Regulated(HPNR)</b> <br />
<b>Getting Basic Price- Vehicle value is  =46854.17</b> <br />
<b>Getting Basic Price - Paint  value is  =0.00</b> <br />
<b>Getting  Basic Price - Options value is   =833.33</b> <br />
<b>Getting Discount- Vehicle value is  =0.00</b> <br />
<b>Getting   Discount - Paint value is   =0.00</b> <br />
<b>Getting  Discount- Options value is   =0.00</b> <br />
<b>Getting Additional Discount- Vehicle value is  =0.00</b> <br />
<b>Getting  Additional Discount - paint value is  =0.00</b> <br />
<b>Getting  Additional Discount - Options value is  =0.00</b> <br />
<b>Writing OTR table values to excel sheet -Started </b> <br />
<b>Writing OTR table values to excel sheet -Completed </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Subtotal After Discount from excel sheet is =47687.5</b> <br />
<b>Subtotal after discount actual value from screen =Â£ 47,687.50</b> <br />]]>
  </system-out>
  <testcase classname="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" name="aquisition_quotes_user_flow_broker_HPNR_after_discount_calculations_test" time="4.894"/>
  <system-out>
    <![CDATA[<b>*********Calculations for On Road Price has been started***********</b> <br />
<b>Started getting On screen values from after discount table </b> <br />
<b>Manufacture_delivery_charges =550.0</b> <br />
<b>Road_tax_first_year =585.0</b> <br />
<b>First_registration_fee =55.0</b> <br />
<b>Rebate =0.0</b> <br />
<b>Writing After discount values to excel has been started</b> <br />
<b>Writing After discount values to excel has been completed</b> <br />
<b>Reading On Road Price for invoice from excel has been Started</b> <br />
<b>Reading On Road Price for invoice from excel has been completed</b> <br />
<b>Expected on the road price from excel is =58525.0</b> <br />
<b>Actual on the road price from screen is =58525.00</b> <br />]]>
  </system-out>
  <testcase classname="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" name="aquisition_quotes_user_flow_broker_HPNR_vehicle_profit_check_test" time="11.130"/>
  <system-out>
    <![CDATA[<b>Vehicle profit from test data 1200.0 added to otr cost price 58525.0</b> <br />
<b>After adding profit to cost price 58525.0 sales price is shown as (considering VAT%) 59965.0</b> <br />
<b>Vehicle profit verified</b> <br />
<b></b> <br />
<b>Verifying Vehicle profit and Total Monthly Payment on editing Vehicle Sales Price</b> <br />
<b>Sending 70230.0 to sales total input field</b> <br />
<b>Vehicle profit verified on editing Vehicle Sales Price</b> <br />]]>
  </system-out>
  <testcase classname="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" name="aquisition_quotes_user_flow_broker_HPNR_balance_to_finance_check_test" time="31.293">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test.aquisition_quotes_user_flow_broker_HPNR_balance_to_finance_check_test(Acquisition_Quotes_Broker_HPNR_Test.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- aquisition_quotes_user_flow_broker_HPNR_balance_to_finance_check_test -->
  <system-out>
    <![CDATA[<b></b> <br />
<b>Adding Funder Quote Values to Screen</b> <br />
<b>Funder Quote Added Successfully</b> <br />
<b></b> <br />
<b>Entering Part Exchange Values to screen</b> <br />
<b></b> <br />
<b>Started verifying Balance Due Value</b> <br />
<b>Clicked on Part Exchange panel</b> <br />
<b></b> <br />
<b>Started verifying Balance To Finance</b> <br />
<b>Balance To Finance Expected is =68730.0</b> <br />
<b>Balance To Finance Actual From Screen is =70230.0</b> <br />
<b>xxx -Please check Balance to finance value from customer quote summary</b> <br />
<br>----------Screenshot---------<br>
<img src="D:\StagingNew\AMT_Automation\target\surefire-reports\html\failure_screenshots\aquisition_quotes_user_flow_broker_HPNR_balance_to_finance_check_test_26_04_2023_02_05_54.png" height="800" width="1000">]]>
  </system-out>
  <testcase classname="newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test" name="aquisition_quotes_user_flow_broker_HPNR_quote_summary_values_verification_test" time="0.000">
    <skipped/>
  </testcase> <!-- aquisition_quotes_user_flow_broker_HPNR_quote_summary_values_verification_test -->
  <system-out/>
</testsuite> <!-- newCar.BROKER.Acquisition_Quotes_Broker_HPNR_Test -->
