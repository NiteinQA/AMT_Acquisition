<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DSK-4052" failures="1" tests="6" name="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" time="276.854" errors="0" timestamp="2023-10-11T06:07:18 IST" skipped="2">
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_OTR_calculation_with_maintenance_test" time="66.908"/>
  <system-out>
    <![CDATA[<b>Clicked on Quote button </b> <br />
<b>Selecting used vehicle with registration no. = GY19XAG and mileage = 15000</b> <br />
<b>Vehicle selected</b> <br />
<b>Paint option has been selected</b> <br />
<b>Interior option has been selected</b> <br />
<b> Acquisition Contract type option = Outright Purchase (OP) has been selected</b> <br />
<b> Customer Contract type option = HPR has been selected</b> <br />
<b>Cost Price ex VAT and RFL from screen is 20958.33</b> <br />
<b>VAT from screen is 4191.67</b> <br />
<b>Cost Price ex VAT and RFL calculated is 20958.33</b> <br />
<b>Cost Price ex VAT and RFL verified and found OK</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_holding_cost_calculations_with_maintenance_test" time="21.300"/>
  <system-out>
    <![CDATA[<b>***********Entered in holding cost page ***********</b> <br />
<b>Clicked on holding cost summary</b> <br />
<b>Clicked on holding_cost_maintenance_toggle_button</b> <br />
<b></b> <br />
<b>***Verifying Holding Cost before editing CAP data*** </b> <br />
<b>Getting on screen values from Holding Cost Page</b> <br />
<b>Duration(Terms) =36.0</b> <br />
<b>Annual_mileage =10000.0</b> <br />
<b>Residual_value_from_screen =17575.0</b> <br />
<b>Total_cap_maintenance_value_annual =0.0</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =274.79</b> <br />
<b>Total_monthly_holding_cost_from_excel =274.7942630063753</b> <br />
<b>Total Monthly Holding Cost based on CAP data is Verified and Found OK</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_customer_quote_calculations_check_monthly_finance_payment_with_maintenance_test" time="104.233"/>
  <system-out>
    <![CDATA[<b>***********Entered in Customer Quote page ***********</b> <br />
<b>Matrix credit type A1 Credit has been selected</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -started</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -completed</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -started</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -completed</b> <br />
<b>Actual Monthly Finance Payment from screen is 448.47</b> <br />
<b>Expected Monthly Finannce Rental from excel is 448.4744322706457</b> <br />]]>
  </system-out>
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_customer_quote_part_exchange_value_edit_check_with_maintenance_test" time="84.413">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test.aquisition_quotes_customer_quote_part_exchange_value_edit_check_with_maintenance_test(Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test.java:145)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- aquisition_quotes_customer_quote_part_exchange_value_edit_check_with_maintenance_test -->
  <system-out>
    <![CDATA[<b>Clicked on Part Exchange panel</b> <br />
<b></b> <br />
<b>Balance To Finance Expected is 24749.996000000003</b> <br />
<b>Balance To Finance Actual is 24250.0</b> <br />
<b></b> <br />
<b>Monthly Finance Payment Expected is 367.11130531082</b> <br />
<b>Monthly Finance Payment Actual is 350.84</b> <br />
<b></b> <br />
<br>----------Screenshot---------<br>
<img src="D:\Acquisition\AMT_Automation_Acquisition\target\surefire-reports\html\failure_screenshots\aquisition_quotes_customer_quote_part_exchange_value_edit_check_with_maintenance_test_11_10_2023_02_40_10.png" height="800" width="1000">]]>
  </system-out>
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_customer_quote_monthly_finance_payment_after_balloon_payment_off_with_maintenance_test" time="0.000">
    <skipped/>
  </testcase> <!-- aquisition_quotes_customer_quote_monthly_finance_payment_after_balloon_payment_off_with_maintenance_test -->
  <system-out/>
  <testcase classname="usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test" name="aquisition_quotes_quote_summary_values_verification_with_maintenance_test" time="0.000">
    <skipped/>
  </testcase> <!-- aquisition_quotes_quote_summary_values_verification_with_maintenance_test -->
  <system-out/>
</testsuite> <!-- usedCar.OP.Acquisition_Quotes_Outright_HPR_used_car_with_maintenance_Test -->
