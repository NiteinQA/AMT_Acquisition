<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DSK-4052" failures="0" tests="6" name="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" time="420.105" errors="1" timestamp="2024-02-07T08:01:00 IST" skipped="1">
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_OTR_calculation_without_maintenance_test" time="102.075"/>
  <system-out>
    <![CDATA[<b>Clicked on Quote button </b> <br />
<b>Manufacture =AUDI has been selected</b> <br />
<b>Model range =A7 has been selected</b> <br />
<b>Vehicle has been selected</b> <br />
<b>Paint option has been selected</b> <br />
<b>Interior option has been selected</b> <br />
<b> Acquisition Contract type option = Outright has been selected</b> <br />
<b> Customer Contract type option = Purchase Contract Hire(PCH) has been selected</b> <br />
<b>Getting Basic Price- Vehicle value is  =55495.83</b> <br />
<b>Getting Basic Price - Paint  value is  =0.00</b> <br />
<b>Getting  Basic Price - Options value is   =833.33</b> <br />
<b>Getting Discount- Vehicle value is  =0.00</b> <br />
<b>Getting   Discount - Paint value is   =0.00</b> <br />
<b>Getting  Discount- Options value is   =0.00</b> <br />
<b>Getting Additional Discount- Vehicle value is  =0.00</b> <br />
<b>Getting  Additional Discount - paint value is  =0.00</b> <br />
<b>Getting  Additional Discount - Options value is  =0.00</b> <br />
<b>Writing OTR table values to excel sheet -Started </b> <br />
<b>Writing OTR table values to excel sheet -Completed </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Reading Subtotal After Discount from excel sheet -Started </b> <br />
<b>Subtotal After Discount from excel sheet is =56329.16</b> <br />
<b>Subtotal after discount actual value from screen =Â£ 56,329.17</b> <br />]]>
  </system-out>
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_after_discount_calculations_without_maintenance_test" time="4.425"/>
  <system-out>
    <![CDATA[<b>*********Calculations for On Road Price has been started***********</b> <br />
<b>Started getting On screen values from after discount table </b> <br />
<b>Manufacture_delivery_charges =645.83</b> <br />
<b>Road_tax_first_year =645.0</b> <br />
<b>First_registration_fee =55.0</b> <br />
<b>Rebate =0.0</b> <br />
<b>Writing After discount values to excel has been started</b> <br />
<b>Writing After discount values to excel has been completed</b> <br />
<b>Reading On Road Price for invoice from excel has been Started</b> <br />
<b>Reading On Road Price for invoice from excel has been completed</b> <br />
<b>Expected on the road price from excel is =69069.99</b> <br />
<b>Actual on the road price from screen is =69070.00</b> <br />]]>
  </system-out>
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_other_support_check_without_maintenance_test" time="22.133"/>
  <system-out>
    <![CDATA[<b>Verification of OTR price for calculation after adding other support value has been started</b> <br />
<b>Writing other support value to Excel has been started</b> <br />
<b>Writing other support value to Excel has been ended</b> <br />
<b>OTR price for calculation after adding other support found OK</b> <br />
<b>Verification of OTR price for calculation after adding other support value has been ended</b> <br />]]>
  </system-out>
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_holding_cost_calculations_without_maintenance_test" time="54.534"/>
  <system-out>
    <![CDATA[<b>***********Entered in holding cost page ***********</b> <br />
<b>Clicked on holding cost summary</b> <br />
<b></b> <br />
<b>Verifying Holding Cost Based on CAP data</b> <br />
<b>Getting on screen values from Holding Cost Page</b> <br />
<b>Duration(Terms) =36.0</b> <br />
<b>Annual_mileage =10000.0</b> <br />
<b>Cap_residual_value_from_screen =28050.0</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =1333.70</b> <br />
<b>Total_monthly_holding_cost_from_excel =1333.7006627824342</b> <br />
<b>Total Monthly Holding Cost based on CAP data is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing % CAP Residual Value used</b> <br />
<b>Changing % CAP Residual Value (from test  data) to 100</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =1333.70</b> <br />
<b>Total_monthly_holding_cost_from_excel =1333.7006627824342</b> <br />
<b>Total Monthly Holding Cost After Editing % Residual Value is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing Residual value used</b> <br />
<b>Changing Residual value used to =20000</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =1490.65</b> <br />
<b>Total_monthly_holding_cost_from_excel =1490.6457320806471</b> <br />
<b>Total Monthly Holding Cost After Editing Residual Value is Verified and Found OK</b> <br />
<b></b> <br />
<b>Editing additional terms and mileage</b> <br />
<b>Updated Residual Value from screen  (to be sent to calculation excel) is =28600.00</b> <br />
<b>Writing Holding Cost Summary values to excel has been started</b> <br />
<b>Writing Holding Cost Summary values to excel has been completed</b> <br />
<b>Reading Monthly Holding Cost value from excel has been started</b> <br />
<b>Reading Monthly Holding Cost value from excel has been completed</b> <br />
<b>Total_monthly_holding_cost_from_screen =1,921.81</b> <br />
<b>Total_monthly_holding_cost_from_excel =1921.8099187619366</b> <br />
<b>Total Monthly Holding Cost After Editing Additional terms and mileage is Verified and Found OK</b> <br />]]>
  </system-out>
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_customer_quote_payment_profile_calculations_without_maintenance_test" time="236.938">
    <error message="element click intercepted: Element &lt;input _ngcontent-piw-c18=&quot;&quot; class=&quot;form-control text-right pr-2 inputheight20 inpbotadj ng-untouched ng-pristine ng-valid&quot; handlefloatingnumberfields=&quot;&quot; maxlength=&quot;9&quot; name=&quot;monetaryAmount&quot; noautocomplete=&quot;&quot; type=&quot;text&quot; autocomplete=&quot;off&quot; required=&quot;&quot; pattern=&quot;^\d*(\.\d{0,2})?$&quot; style=&quot; border: 1px solid white;&quot;&gt; is not clickable at point (419, 250). Other element would receive the click: &lt;div _ngcontent-piw-c0=&quot;&quot; class=&quot;loader_div&quot;&gt;...&lt;/div&gt;
  (Session info: chrome=121.0.6167.140)
Build info: version: &#039;4.1.0&#039;, revision: &#039;87802e897b&#039;
System info: host: &#039;DSK-4052&#039;, ip: &#039;172.16.1.80&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;19.0.1&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [772c65d30d014fb87b11e0238505360b, clickElement {id=F9DC6512F4FEB29DB9BC51F7B626EC65_element_982}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\NITEIN~1.KUR\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57993}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57993/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (772c65d30d014fb87b11e0238505360b)] -&gt; xpath: //input[@name=&#039;monetaryAmount&#039;]]
Session ID: 772c65d30d014fb87b11e0238505360b" type="org.openqa.selenium.ElementClickInterceptedException">
      <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input _ngcontent-piw-c18="" class="form-control text-right pr-2 inputheight20 inpbotadj ng-untouched ng-pristine ng-valid" handlefloatingnumberfields="" maxlength="9" name="monetaryAmount" noautocomplete="" type="text" autocomplete="off" required="" pattern="^\d*(\.\d{0,2})?$" style=" border: 1px solid white;"> is not clickable at point (419, 250). Other element would receive the click: <div _ngcontent-piw-c0="" class="loader_div">...</div>
  (Session info: chrome=121.0.6167.140)
Build info: version: '4.1.0', revision: '87802e897b'
System info: host: 'DSK-4052', ip: '172.16.1.80', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [772c65d30d014fb87b11e0238505360b, clickElement {id=F9DC6512F4FEB29DB9BC51F7B626EC65_element_982}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\NITEIN~1.KUR\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57993}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57993/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (772c65d30d014fb87b11e0238505360b)] -> xpath: //input[@name='monetaryAmount']]
Session ID: 772c65d30d014fb87b11e0238505360b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy23.click(Unknown Source)
at com.amt.testUtil.Click.on(Click.java:22)
at com.amt.testUtil.ReadExcelCalculation.verify_customer_quote_calculations_for_all_payment_options_without_maintenance(ReadExcelCalculation.java:2308)
at com.amt.CustomerQuotePackage.CustomerQuotePageOutrightPCHPage.customer_Quote_outright_PCH_for_all_payment_option_without_maintenance_calculation(CustomerQuotePageOutrightPCHPage.java:243)
at newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test.aquisition_quotes_outright_PCH_customer_quote_payment_profile_calculations_without_maintenance_test(Acquisition_Quotes_Outright_PCH_without_maintenance_Test.java:226)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- aquisition_quotes_outright_PCH_customer_quote_payment_profile_calculations_without_maintenance_test -->
  <system-out>
    <![CDATA[<b>Writing configuration values from property file to Excel for customer quote calculation -started</b> <br />
<b>Writing configuration values from property file to Excel for customer quote calculation -completed</b> <br />
<b>************Calculations for Customer Quote Page has been started***********</b> <br />
<b>Payment Profile Monthly in Advance option has been selected</b> <br />
<b>Writing values to Excel for customer quote calculation -started</b> <br />
<b>Writing values to Excel for customer quote calculation -completed</b> <br />
<b>Reading  Monthly Finance Rental from  Excel   -started</b> <br />
<b>Reading  Monthly Finance Rental from  Excel   -completed</b> <br />
<b>Monthly Finance Rental from Excel is =2704.0061996875093</b> <br />
<b>Monthly Finance Rental from screen is 2704.01</b> <br />
<b>Monthly Finance Rental from screen (after submitting upsell values) is 2728.42</b> <br />
<b>Writing upsell values to excel</b> <br />
<b>Monthly Finance Rental from Excel (after submitting upsell values) is 2728.4197584294275</b> <br />
<b>Monthly finance (after submitting upsell values) is found OK</b> <br />
<b>Clicked on Part Exchange panel</b> <br />
<b>Monthly Finance Rental from screen (with part exchange values) is 2728.42</b> <br />
<b>Writing part exchange values to excel</b> <br />
<b>Monthly Finance Rental from Excel (with part exchange values) is 2728.4197584294275</b> <br />
<b>Monthly finance rental (with part exchange values) is found OK</b> <br />
<b></b> <br />
<b>********Balance Due value started verifying**********</b> <br />
<b>Balance due value Actual from screen is -2760.01</b> <br />
<b></b> <br />
<b>Balance due value Expected from Excel is -2760.01</b> <br />
<b></b> <br />
<b>Balance due value (with part exchange values) is verified and found ok</b> <br />
<b>Monthly Finance Rental from screen (after updating customer quote summary upsell value) is 2740.63</b> <br />
<b>Writing upsell values to excel</b> <br />
<b>Monthly Finance Rental from Excel (after updating customer quote summary upsell value) is 2740.6265378003864</b> <br />
<b>Monthly finance rental (after updating customer quote summary upsell value) is found OK</b> <br />
<b>Calculations with different payment profiles for customer quote has been started</b> <br />
<br>----------Screenshot---------<br>
<img src="D:\Acquisition\AMT_Automation_Acquisition\target\surefire-reports\html\failure_screenshots\aquisition_quotes_outright_PCH_customer_quote_payment_profile_calculations_without_maintenance_test_07_02_2024_05_23_05.png" height="800" width="1000">]]>
  </system-out>
  <testcase classname="newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test" name="aquisition_quotes_outright_PCH_quote_summary_values_verification_without_maintenance_test" time="0.000">
    <skipped/>
  </testcase> <!-- aquisition_quotes_outright_PCH_quote_summary_values_verification_without_maintenance_test -->
  <system-out/>
</testsuite> <!-- newCar.OP.Acquisition_Quotes_Outright_PCH_without_maintenance_Test -->
